// git 相關介紹

// 需要安裝 windows 版本的 git(程式)
// https://git-scm.com/download/win

// 使用終端機在專案資料夾初始化 git 設定
// git init

// 設定該電腦 git 使用者 email, 若要修改就再次設定
// git config --global user.email "you@example.com"

// 設定該電腦 git 使用者 user name, 若要修改就再次設定
// git config --global user.name "Your Name"

// 查看使用者設置
// git config --list
// git config --global --list

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------

// 將檔案保存至暫存區
// git add [檔案名稱]

// 將所有檔案保存至暫存區
// git add .
// git add -A

// 將暫存區的檔案存檔至 git 的存檔中
// git commit -m "存檔的註釋"
// 補充: 若不輸入 -m and "存檔的註釋" 則會進入底層區域設置保存訊息, 略難使用
// 在底層區域按下 esc 並輸入 wq 可退出, 重新存檔

// 將暫存區的檔案還原至至專案中
// git checkout [檔案名稱]

// 顯示 git commit 紀錄和相關註釋
// git log

// 將存檔還原至專案中
// git reset [commit 代碼]
// 補充: commit 代碼可git log 查詢

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------

// 查詢或設置遠端倉庫(伺服器的存檔位置)為變數

// 查詢變數
// git remote

// 查詢變數的遠端倉庫地址
// git remote show [變數]

// 設置遠端倉庫變數
// git remote add <變數> xxxxx@xxx.xxxx.xxx.xxx:/xxx/xxx/xxx/xxx.git

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------

// 分支相關

// 查詢分支
// git branch

// 新增分支
// git branch [分支名稱]

// 刪除分支
// git branch -d [分支名稱] 無法刪除尚未保存的分支
// git branch -D [分支名稱] 強制刪除

// 切換分支
// git checkout [分支名稱]

// 新增並切換至該分支
// git checkout -b [分支名稱]

// 合併分支
// git merge [分支名稱]
// 補充: 分支合併時偶爾會有衝突，待補充

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------

// 上傳至遠端倉庫(伺服器的存檔位置)
// git push [遠程倉庫的地址] [分支名稱]

// 將本地分支上傳至遠端分支, 分支可以不相同
// git push [遠程倉庫的地址] [本地分支名稱]:[遠端分支名稱]

// 下載遠端倉庫分支
// git pull [遠程倉庫的地址] [分支名稱]

// 下載遠端倉庫所有存檔
// git clone [遠程倉庫的地址]

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------

/**
 * 在專案中讓 git 忽略檔案.
 *
 * 在專案新增 .gitignore 檔案, 每行一個忽略條件, 可以是檔案也可以是資料夾.
 *
 * 範例: 忽略 node_modules 的檔案.
 * node_modules
 *
 * 範例: 保存 dist 資料夾.
 * # /dist
 */

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------

/**
 * VSCode Git 操作相關
 *
 * 如果你要回到某個 commit 紀錄, 請對 commit 按右鍵, 選擇 reset current branch to
 * commit, 並捨棄所有變更.
 *
 * 如果電腦的 git 紀錄與 github git 紀錄不相同, 卻需要 push 至 github, 請先確保你的
 * git 紀錄是絕對正確的, 然後輸入 git push -f [遠程倉庫的地址] [分支名稱].
 * -f 代表強制覆蓋.
 */

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
